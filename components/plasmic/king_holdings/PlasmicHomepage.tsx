// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: kiFSA3h9FrvkjaGy1WgbD5
// Component: 6dSR2zCkyVMe

"use client";

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/navigation";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Navbar from "../../Navbar"; // plasmic-import: nKlrvhU1qMFG/component
import Button from "../../Button"; // plasmic-import: Z0X_Dp4hOXh6/component
import InfoHoldingComponent from "../../InfoHoldingComponent"; // plasmic-import: _J4O03JfDnY9/component
import BackersLink from "../../BackersLink"; // plasmic-import: 9AJzbvLeiigQ/component
import CollateralOptionItem from "../../CollateralOptionItem"; // plasmic-import: s4r-vDeDcBPL/component
import LoanSteps from "../../LoanSteps"; // plasmic-import: -qv23-7uY2m_/component
import Footer from "../../Footer"; // plasmic-import: mZumc7SQg1Ug/component

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic_antd_5_hostless.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic_king_holdings.module.css"; // plasmic-import: kiFSA3h9FrvkjaGy1WgbD5/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: 6dSR2zCkyVMe/css

import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: 5I_AReW0eGkq/icon
import Icon7Icon from "./icons/PlasmicIcon__Icon7"; // plasmic-import: MCxIDTGBtPBI/icon

createPlasmicElementProxy;

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  navbar?: p.Flex<typeof Navbar>;
  h2?: p.Flex<"h2">;
  p?: p.Flex<"p">;
  ul?: p.Flex<"ul">;
  li?: p.Flex<"li">;
  h6?: p.Flex<"h6">;
  footer?: p.Flex<typeof Footer>;
};

export interface DefaultHomepageProps {}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = ph.useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            sty.root
          )}
        >
          <Navbar
            data-plasmic-name={"navbar"}
            data-plasmic-override={overrides.navbar}
            className={classNames("__wab_instance", sty.navbar)}
          />

          <section className={classNames(projectcss.all, sty.section__xv2L)}>
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__hdgvy)}>
                <h2
                  data-plasmic-name={"h2"}
                  data-plasmic-override={overrides.h2}
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2
                  )}
                >
                  {"Get Instant Crypto Loans"}
                </h2>
                <p
                  data-plasmic-name={"p"}
                  data-plasmic-override={overrides.p}
                  className={classNames(
                    projectcss.all,
                    projectcss.p,
                    projectcss.__wab_text,
                    sty.p
                  )}
                >
                  {
                    "Use more than 50 TOP coins as collateral for crypto loans with the highest loan-to-value ratio (90%). Get loans in stablecoins or crypto and withdraw instantly to your wallets or exchanges."
                  }
                </p>
                <Button
                  className={classNames("__wab_instance", sty.button__iVisM)}
                  color={"blue" as const}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ymFp5
                    )}
                  >
                    {"Get Loan"}
                  </div>
                </Button>
              </div>
            ) : null}
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__s7XCs)}
            >
              <InfoHoldingComponent
                className={classNames(
                  "__wab_instance",
                  sty.infoHoldingComponent__rKK1
                )}
              />

              <InfoHoldingComponent
                className={classNames(
                  "__wab_instance",
                  sty.infoHoldingComponent__fCrjo
                )}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__dIs3
                  )}
                >
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#000000" }}
                    >
                      {" YouHodler (NAUMARD LTD)"}
                    </span>
                    <React.Fragment>
                      {
                        " crypto-lending solutions is structured in the form of token purchase/re-purchase agreements. "
                      }
                    </React.Fragment>
                  </React.Fragment>
                </div>
              </InfoHoldingComponent>
            </p.Stack>
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__higt)}
              >
                <BackersLink
                  className={classNames(
                    "__wab_instance",
                    sty.backersLink__zif1E
                  )}
                />

                <BackersLink
                  className={classNames(
                    "__wab_instance",
                    sty.backersLink__mKag4
                  )}
                  slot={
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__jNl4S)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={
                        "https://assets-global.website-files.com/5cc19fbd198b8d31a9c64876/63c05fb0cdaada6a20231e71_testimonial_ledger.svg" as const
                      }
                    />
                  }
                >
                  {"Custody secured by Ledger Enterprise"}
                </BackersLink>
                <BackersLink
                  className={classNames(
                    "__wab_instance",
                    sty.backersLink__hgPl3
                  )}
                  slot={
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__gxLIj)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={
                        "https://assets-global.website-files.com/5cc19fbd198b8d31a9c64876/63c05fb35925bbf0b0b93c0a_testimonial_torino_fc.svg" as const
                      }
                    />
                  }
                >
                  {"Official Crypto Partner of Torino FC"}
                </BackersLink>
              </p.Stack>
            ) : null}
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__ukE)}
              displayHeight={"auto" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"auto" as const}
              loading={"lazy" as const}
              src={
                "https://assets-global.website-files.com/5cc19fbd198b8d31a9c64876/636bbb544247aa213c570a66_Illustration_loans.jpg" as const
              }
            />
          </section>
          <section className={classNames(projectcss.all, sty.section__byWmz)}>
            <h3
              className={classNames(
                projectcss.all,
                projectcss.h3,
                projectcss.__wab_text,
                sty.h3__k9Y3T
              )}
            >
              {"Collateral Options"}
            </h3>
            <div className={classNames(projectcss.all, sty.freeBox__dj10F)}>
              <CollateralOptionItem
                className={classNames(
                  "__wab_instance",
                  sty.collateralOptionItem__s8G3V
                )}
              />

              <CollateralOptionItem
                className={classNames(
                  "__wab_instance",
                  sty.collateralOptionItem___5StQi
                )}
              />

              <CollateralOptionItem
                className={classNames(
                  "__wab_instance",
                  sty.collateralOptionItem__qa4Z8
                )}
              />
            </div>
          </section>
          <section className={classNames(projectcss.all, sty.section__hOkrn)}>
            <h3
              className={classNames(
                projectcss.all,
                projectcss.h3,
                projectcss.__wab_text,
                sty.h3__pvn0I
              )}
            >
              {"How Crypto Backed Loans Work"}
            </h3>
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__pjDHa)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___23HWk)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={
                    "https://assets-global.website-files.com/5cc19fbd198b8d31a9c64876/63c7d15611d6b5f71fb0005f_screen_loans-create-p-800.png" as const
                  }
                />
              </div>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___2Iv0J)}
              >
                {true ? (
                  <LoanSteps
                    className={classNames(
                      "__wab_instance",
                      sty.loanSteps__lslOh
                    )}
                  />
                ) : null}
                {true ? (
                  <LoanSteps
                    className={classNames(
                      "__wab_instance",
                      sty.loanSteps__gab5E
                    )}
                    slot={"Get a crypto loan and withdraw funds "}
                    slot2={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__zpvlK
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>
                            {
                              "Login, choose loan settings. Your loan approves instantly. No need to find a lender like in peer-to-peer (p2p) platforms. You instantly receive stablecoins, or popular cryptocurrencies.\n\n"
                            }
                          </React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontStyle: "italic", fontWeight: 700 }}
                          >
                            {"Our withdrawal options"}
                          </span>
                          <React.Fragment>{":\n\n"}</React.Fragment>
                          {
                            <ul
                              data-plasmic-name={"ul"}
                              data-plasmic-override={overrides.ul}
                              className={classNames(
                                projectcss.all,
                                projectcss.ul,
                                sty.ul
                              )}
                            >
                              <li
                                data-plasmic-name={"li"}
                                data-plasmic-override={overrides.li}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.li,
                                  projectcss.__wab_text,
                                  sty.li
                                )}
                              >
                                {
                                  "    Crypto withdrawal: withdraw any crypto or stablecoins using our integrated crypto exchange."
                                }
                              </li>
                            </ul>
                          }
                          <React.Fragment>{""}</React.Fragment>
                        </React.Fragment>
                      </div>
                    }
                  >
                    {"2"}
                  </LoanSteps>
                ) : null}
                {true ? (
                  <LoanSteps
                    className={classNames(
                      "__wab_instance",
                      sty.loanSteps__icCmt
                    )}
                    slot={"Manage your payments "}
                    slot2={
                      "By default, the loan daily fee is calculated every 24 hours from the loan opening moment. You are free to repay the loan at the stipulated time and get back your 10% collateral."
                    }
                  >
                    {"3"}
                  </LoanSteps>
                ) : null}
                {true ? (
                  <LoanSteps
                    className={classNames(
                      "__wab_instance",
                      sty.loanSteps__hvWoi
                    )}
                    slot={"Get your crypto collateral back anytime "}
                    slot2={
                      "You can repay your loan anytime, and even part of your loan collateral to get your crypto back."
                    }
                  >
                    {"4"}
                  </LoanSteps>
                ) : null}
              </p.Stack>
            ) : null}
            <Button
              className={classNames("__wab_instance", sty.button__l5Zzs)}
              color={"blue" as const}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__olQx5
                )}
              >
                {"Get Loan"}
              </div>
            </Button>
          </section>
          <section className={classNames(projectcss.all, sty.section__omfkh)}>
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__o3XLz)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___6XeNo)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={
                    "https://assets-global.website-files.com/5cc19fbd198b8d31a9c64876/63c825b85881a9fcf1edb652_screen_cta_2-p-800.png" as const
                  }
                />
              </div>
            ) : null}
            <h3
              className={classNames(
                projectcss.all,
                projectcss.h3,
                projectcss.__wab_text,
                sty.h3__f4Xse
              )}
            >
              {"Get Instant Crypto Loans"}
            </h3>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__axFnx
              )}
            >
              {
                "Store, exchange stablecoins and crypto. Rewards, staking and loans integrated. "
              }
            </div>
            <Button
              className={classNames("__wab_instance", sty.button__iqXpb)}
              color={"white" as const}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__hQuvv
                )}
              >
                {"Get Loan"}
              </div>
            </Button>
          </section>
          <section className={classNames(projectcss.all, sty.section__rTCfO)}>
            <h6
              data-plasmic-name={"h6"}
              data-plasmic-override={overrides.h6}
              className={classNames(
                projectcss.all,
                projectcss.h6,
                projectcss.__wab_text,
                sty.h6
              )}
            >
              {"\nChoronHoldings IS REGULATED IN SWITZERLAND AND EU\n"}
            </h6>
            <BackersLink
              className={classNames("__wab_instance", sty.backersLink__cy71T)}
              slot={
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__ogM6D)}
                  displayHeight={"20px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"20px" as const}
                  loading={"lazy" as const}
                  src={
                    "https://assets-global.website-files.com/5cc19fbd198b8d31a9c64876/5d81e319d805196b051acc75_switzerland%20(1).svg" as const
                  }
                />
              }
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__cvPo9
                )}
              >
                {"ChoronHoldings S.A. Regulated Financial  Control."}
              </div>
            </BackersLink>
            <BackersLink
              className={classNames("__wab_instance", sty.backersLink__flRgH)}
              slot={
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__hvKdP)}
                  displayHeight={"20px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"20px" as const}
                  loading={"lazy" as const}
                  src={
                    "https://assets-global.website-files.com/5cc19fbd198b8d31a9c64876/5d81e344072bc3cc6157f8c7_european-union.svg" as const
                  }
                />
              }
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__rQkKl
                )}
              >
                {"ChoronHoldings Italy S.R.L. OAM Registration"}
              </div>
            </BackersLink>
            <BackersLink
              className={classNames("__wab_instance", sty.backersLink___18Cu)}
              slot={
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__d8T9S)}
                  displayHeight={"20px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"20px" as const}
                  loading={"lazy" as const}
                  src={
                    "https://assets-global.website-files.com/5cc19fbd198b8d31a9c64876/63c1a1e8c740e1e785d20c56_wallet.svg" as const
                  }
                />
              }
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___5EsZ1
                )}
              >
                {"Partnership with regulated EU financial providers"}
              </div>
            </BackersLink>
          </section>
          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "navbar", "h2", "p", "ul", "li", "h6", "footer"],
  navbar: ["navbar"],
  h2: ["h2"],
  p: ["p"],
  ul: ["ul", "li"],
  li: ["li"],
  h6: ["h6"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  navbar: typeof Navbar;
  h2: "h2";
  p: "p";
  ul: "ul";
  li: "li";
  h6: "h6";
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbar: makeNodeComponent("navbar"),
    h2: makeNodeComponent("h2"),
    p: makeNodeComponent("p"),
    ul: makeNodeComponent("ul"),
    li: makeNodeComponent("li"),
    h6: makeNodeComponent("h6"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
